{"name":"CSCI 208 - Programming Languages","tagline":"Educational questions answered to better understand a language. I chose Clojure.","body":"# Answers to Clojure\r\n\r\n`bucknell/csci208`\r\n\r\nA semester-long project: pick up a new language and answer questions (~30).\r\n\r\n\r\n## The report\r\n\r\n- The PDF under `project` folder.\r\n- if you have the Haskell and LaTeX dependencies figured out, do \r\n\r\n> `pandoc -s *.md --bibliography biblio.bib --csl apa.csl --toc  -o out.pdf` \r\n\r\n\r\n__Note:__ \r\n\r\n- the bibtex citations are in `biblio.bib`; they are cited as `[@citekey2015]` in the markdown files.\r\n\r\n\r\n## How to run code\r\n\r\nSince Clojure has a very nice read-evaluate-print-loop (REPL), separate `clj` files are not provided for each question.\r\n\r\n1. Install Java.\r\n2. Install [Clojure](http://clojure.org/getting_started).\r\n3. Install [Leiningen](http://leiningen.org) and get the dependencies right.\r\n4. Run `lein repl`\r\n5. Enter code at the prompt\r\n\r\n\r\n## Good-to-have\r\n\r\n[braveclojure](http://www.braveclojure.com/basic-emacs/) teaches how to set up your emacs to work with Clojure conveniently.","google":"UA-63010536-2","note":"Don't delete this file! It's used internally to help with page regeneration."}